#**********************************************************************************************
# WRF Simulation Preparation File 
# 
# This is the top level configuration file for preparing 
# WRF simulations. This will overide a small number
# of  settings in 'namelist.wps' and 'namelist.input'
#
# Environment variables can be accessed using $(var) syntax
# Local variables defined elswhere in this configuration file can be 
# accessed using %(var) syntax.  If the variable inside $() or %() 
# is not defined within the current environment, it will not be expanded.
#
# Due to the syntax of yaml, entries cannot begin with %; 
# to start an entry with a local variable reference, enclose 
# the entry in quotation marks, see examples below.
# 
# Although the file is nominally divided into sections by comments,
# logically it is a single dictionary 
#
#**********************************************************************************************

        
#************************************************
# Logging
#************************************************
log.name          : wrf_forecast                           # name of logger object
log.level         : DEBUG                                  # log level to write to file   
log.file          : "%(base-dir)/forecast.log"             # file to write to
log.fmt           : "%(message)s"                          # see logging module for format codes
log.mail          : false                                  # send an email of logfile
log.mail.to       : sam.hawkins@vattenfall.com
log.mail.level    : INFO                                   # level to mail
log.mail.buffer   : 100000                                 # maximum number of lines in one email
log.mail.subject  : "Maestro WRF log"                      # subject to use in email 


#***************************************************************
# Timing
# If start not specified, most recent time based on cycles and delay used
# To reforecast, use start and end time.
#***************************************************************
delay              : 3                                      # delay in hours to apply to system time
cycles             : [00, 12]                               # round start time to the nearest one of these hours
start              : 2015-08-06 00:00:00                    # first initial time, ignored if operational is true 
end                : 2015-08-07 00:00:00                    # final *inital time*, not forecast end time
max_dom            : 2                                      # maximum number of nests, this will override namelists
fcst_hours         : 72                                     # length of forecast in hours
history_interval   : 60                                     # minutes between history writes
bdy_interval       : 3                                      # hours between boundary conditions
init_interval      : 24                                     # hours betweeen initialisation times

#************************************************
# Running/exception handling
#************************************************
dry_run           : false                                  # don't run commands, just log them
full_trace        : true                                   # log a full stack trace of exceptions
cmd_timing        : false                                  # print timing information for each command


#************************************************
# Metadata. 
# Used to help compose directory names, and
# are also added as attributes to the output netcdf
# files. 
#************************************************
domain            : NEurope 
model             : WRF
model_run         : test
bdy_conditions    : GFS

metadata          :                                             # everything inside "metadata" will be copied into attributes in the wrfout files
    domain        : "%(domain)"
    model         : "%(model)"
    model_run     : "%(model_run)"
    bdy_conditions : "%(bdy_conditions)"

    
    
#************************************************
# Directory locations  
#************************************************
base-dir          : $(HOME)/forecasting/%(model_run)            # base directory defining the general model set-up
working-dir       : "%(base-dir)/%iY-%im-%id_%iH"               # indidividual simulations run in this directory
wrftools-dir      : $(HOME)/code/wrftools/devel                 # location of local wrftools repository
namelist_wps      : "%(base-dir)/namelist.wps"                  # location of namelist.wps template to use
namelist_input    : "%(base-dir)/namelist.input"                # location of namelist.input template to use
wps_dir           : /prog/WPS/3.5                               # location of WPS code
wrf_dir           : /prog/WRF/3.5                               # location of WRF code 
wrfout_dir        : "%(working-dir)/wrfout"                     # move wrfout files here after WRF has completed 
real_run_dir      : "%(working-dir)/wrf"
geogrid_run_dir   : "%(working-dir)/geogrid"
metgrid_run_dir   : "%(working-dir)/metgrid"
wrf_run_dir       : "%(working-dir)/wrf"                        # subdirectoty to run WRF from; namelists and met_em files will be linked here   
geo_em_dir        : "%(working-dir)/geogrid"                    # location of geo_em files
met_em_dir        : "%(working-dir)/metgrid"                    # location of met_em files

template_dir      : "%(wrftools-dir)/templates"                 # location of script templates
grb_dir           : $(HOME)/forecasting/GFS/operational


#**********************************************************************************************
# Namelist updates
# will have to extend via an expression to deal with entried which need to be entered max_dom number of times
# beware, we have no sytnax for specifying end time!
#**********************************************************************************************

namelist_updates:
    1:
        template : "%(working-dir)/namelist.wps"
        target   : "%(working-dir)/namelist.wps"
        update:
            constants_name                 : "SST:yesterday"
            opt_output_from_geogrid_path   : "%(geogrid_run_dir)"
            opt_output_from_metgrid_path   : "%(metgrid_run_dir)"
            opt_geogrid_tbl_path           : "%(geogrid_run_dir)"
            opt_metgrid_tbl_path           : "%(metgrid_run_dir)"

    2:
        template : "%(working-dir)/namelist.wps"
        target   : "%(working-dir)/ungrib/namelist.wps"
        update   :
            prefix : GFS

    3:
        template : "%(working-dir)/namelist.wps"
        target   : "%(working-dir)/ungrib_sst/namelist.wps"
        update   :
            prefix: SST
            
    4: 
        template : "%(working-dir)/namelist.wps"
        target   : "%(working-dir)/metgrid/namelist.wps"
        update   :
            fg_name: GFS','SST            # note the weird syntax if using a list, this could do with being changed


#**********************************************************************************************
# Ungrib bondary condition job specifications
# 
# 
#**********************************************************************************************
            
            
ungrib:
    GFS: 
        files     : "%(grb_dir)/GFS_Global_0p5deg_%iy%im%id_%iH%iM_fh%fH.grb"
        delay     : 0
        cycles    : [0,6,12,18]
        fcst_hours: 72
        vtable    : "%(wps_dir)/ungrib/Variable_Tables/Vtable.GFS_new"  
        run_dir   : "%(working-dir)/ungrib"
        prefix    : GFS

    SST: 
        files     : "$(HOME)/forecasting/domains/SST/rtg_sst_grb_hr_0.083.%iY%im%id"
        delay     : 24
        cycles    : [0]
        fcst_hours: 0
        run_dir   : "%(working-dir)/ungrib_sst"
        vtable    :  "%(wps_dir)/ungrib/Variable_Tables/Vtable.SST"
        prefix    : SST 

            
#**********************************************************************************************
# Create job files from templates
#
# Pyaml is not correctly parsing lists of mappings, and mappings are not guaranteed to be ordered
# so an easy way to ensure jobs are ordered is to give them a numerical key
#            
#**********************************************************************************************
            
jobs:
    1: 
        jobname  : ungrib 
        run      : true
        template : "%(template_dir)/template_mpi.sge"
        target   : "%(working-dir)/ungrib/ungrib.sh"
        run_dir  : "%(working-dir)/ungrib"
        replacements:
            <executable>: ungrib.exe
            <queue>    : all.q
            <nprocs>   : 1
            <logfile>  : "%(working-dir)/ungrib/ungrib.log"
            <jobname>  : ungrib
            
    2: 
        jobname  : ungrib.post
        run      : true
        template : "%(template_dir)/ungrib.post.sge"
        target   : "%(working-dir)/ungrib/ungrib.post.sh"
        run_dir  : "%(working-dir)/ungrib"
        replacements:
            <jobname>  : ungrib.post
            <queue>    : all.q
            <nprocs>   : 1
            <logfile>  : "%(working-dir)/ungrib/ungrib.post.log"
        
    3:
        jobname  : ungrib.sst
        run      : true
        template : "%(template_dir)/template_mpi.sge"
        target   : "%(working-dir)/ungrib_sst/ungrib.sh"
        run_dir  : "%(working-dir)/ungrib_sst"
        replacements:
            <jobname>  : ungrib.sst
            <queue>    : all.q
            <nprocs>   : 1
            <logfile>  : "%(working-dir)/ungrib/ungrib.sst.log"


    4:
        jobname  : ungrib.sst.post
        run      : true
        template : "%(template_dir)/ungrib_sst.post.sh"
        target   : "%(working-dir)/ungrib_sst/ungrib_sst.post.sh"
        run_dir  : "%(working-dir)/ungrib_sst"
        replacements:
            <jobname>  : ungrib_sst.post
            <queue>    : all.q
            <nprocs>   : 1
            <logfile>  : "%(working-dir)/ungrib/ungrib_sst.post.log"
        

    5:
        jobname  : geogrid
        run      : true
        template : "%(template_dir)/template_mpi.sge"
        target   : "%(working-dir)/geogrid/geogrid.sh"
        run_dir  : "%(working-dir)/geogrid"
        executable: geogrid.exe
        queue    : all.q
        nprocs   : 1
        logfile  : "%(working-dir)/geogrid/geogrid.log"        

    6:
        jobname  : metgrid
        run      : true
        template : "%(template_dir)/template_mpi.sge"
        target   : "%(working-dir)/metgrid/metgrid.sh"
        run_dir  : "%(working-dir)/metgrid"
        executable: metgrid.exe
        queue    : all.q
        nprocs   : 1
        logfile  : "%(working-dir)/metgrid/metgrid.log"                

    7:
        jobname  : metgrid.post
        run      : true
        template : "%(template_dir)/template_serial.sge"
        target   : "%(working-dir)/metgrid/metgrid.post.sh"
        run_dir  : "%(working-dir)/metgrid"
        cmd      : "mv met_em* ../wrf"
        queue    : all.q
        nprocs   : 1
        logfile  : "%(working-dir)/metgrid/metgrid.post.log"
        
    8:
        jobname  : real
        run      : true
        template : "%(template_dir)/template_mpi.sge"
        target   : "%(working-dir)/wrf/real.sh"
        run_dir  : "%(working-dir)/wrf"
        executable: real.exe
        queue    : all.q
        nprocs   : 1
        logfile  : "%(working-dir)/wrf/real.log"                        
        
    9:
        jobname  : wrf
        run      : true
        template : "%(template_dir)/template_mpi.sge"
        target   : "%(working-dir)/wrf/wrf.sh"
        run_dir  : "%(working-dir)/wrf"
        executable: wrf.exe
        queue    : all.q
        nprocs   : 40
        logfile  : "%(working-dir)/wrf/wrf.log"                                
        

        
        
        
        
        
        
        
        
        
        





#*************************************************************************************************************************
# Internals, only modify if you know what you are doing
#*************************************************************************************************************************

prepare.create:
    - "%(working-dir)" 
    - "%(working-dir)/ungrib"
    - "%(working-dir)/ungrib_sst"
    - "%(working-dir)/geogrid"
    - "%(working-dir)/metgrid"
    - "%(working-dir)/real"
    - "%(working-dir)/wrf"
    - "%(working-dir)/tseries"
    - "%(working-dir)/json"
    - "%(working-dir)/plots"
    - "%(working-dir)/rsl"
    - "%(working-dir)/wps"
    - "%(working-dir)/log"

prepare.remove:                                                          # list of arguments to consecutive linux rm commands. Be careful!
    - "%(ncl_log)"
    - "%(gm_log)"
    - "%(wrf_run_dir)/rsl.*"  
    - "%(wps_run_dir)/ungrib.log*"
    - "%(wps_run_dir)/metgrid.log*"
    - "%(wps_run_dir)/geogrid.log*"
    - "%(working-dir)/plots/%iHZ/*.*"
    - "%(working-dir)/plots/%iHZ/*.*"

prepare.link:                                                          # list of arguments to consecutive linux ln -sf commands
  - "%(wrf_dir)/run/*.exe            %(wrf_run_dir)"
  - "%(wrf_dir)/run/RRTM*            %(wrf_run_dir)"
  - "%(wrf_dir)/run/*.TBL            %(wrf_run_dir)"
  - "%(wps_dir)/*.exe                %(wps_run_dir)"
  - "%(wps_dir)/ungrib.exe           %(working-dir)/ungrib/"
  - "%(wps_dir)/ungrib.exe           %(working-dir)/ungrib_sst/"
  - "%(wps_dir)/metgrid.exe          %(working-dir)/metgrid/"
  - "%(wps_dir)/geogrid.exe          %(working-dir)/geogrid/"
  - "%(wps_dir)/link_grib.csh        %(working-dir)/ungrib/"
  - "%(wps_dir)/link_grib.csh        %(working-dir)/ungrib_sst/"
  - "%(wps_dir)/metgrid/METGRID.TBL  %(metgrid_run_dir)"
  - "%(wps_dir)/geogrid/GEOGRID.TBL  %(geogrid_run_dir)"
  - "%(wps_dir)/metgrid/METGRID.TBL  %(metgrid_run_dir)"
  - "%(wps_dir)/geogrid/GEOGRID.TBL  %(geogrid_run_dir)"
  - "%(working-dir)/namelist.wps     %(geogrid_run_dir)"
  - "%(working-dir)/namelist.input   %(wrf_run_dir)"
  
prepare.copy:                                                           # list of arguments to consecutive linux cp commands
  - "%(namelist_wps)                %(working-dir)"
  - "%(namelist_input)              %(working-dir)"